// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Media.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.Media;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The response body for CheckNameAvailability API.
    /// </summary>
    public partial class CheckNameAvailabilityOutput
    {
        /// <summary>
        /// Initializes a new instance of the CheckNameAvailabilityOutput
        /// class.
        /// </summary>
        public CheckNameAvailabilityOutput()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CheckNameAvailabilityOutput
        /// class.
        /// </summary>
        /// <param name="nameAvailable">Specifies if the name is
        /// available.</param>
        /// <param name="reason">Specifies the reason if the name is not
        /// available. Possible values include: 'None', 'Invalid',
        /// 'AlreadyExists'</param>
        /// <param name="message">Specifies the detailed reason if the name is
        /// not available.</param>
        public CheckNameAvailabilityOutput(bool? nameAvailable = default(bool?), EntityNameUnavailabilityReason? reason = default(EntityNameUnavailabilityReason?), string message = default(string))
        {
            NameAvailable = nameAvailable;
            Reason = reason;
            Message = message;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets specifies if the name is available.
        /// </summary>
        [JsonProperty(PropertyName = "NameAvailable")]
        public bool? NameAvailable { get; set; }

        /// <summary>
        /// Gets or sets specifies the reason if the name is not available.
        /// Possible values include: 'None', 'Invalid', 'AlreadyExists'
        /// </summary>
        [JsonProperty(PropertyName = "Reason")]
        public EntityNameUnavailabilityReason? Reason { get; set; }

        /// <summary>
        /// Gets or sets specifies the detailed reason if the name is not
        /// available.
        /// </summary>
        [JsonProperty(PropertyName = "Message")]
        public string Message { get; set; }

    }
}
