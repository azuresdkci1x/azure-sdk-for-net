// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Media.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.Media;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The properties of a Media Service resource.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class MediaService : Resource
    {
        /// <summary>
        /// Initializes a new instance of the MediaService class.
        /// </summary>
        public MediaService()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MediaService class.
        /// </summary>
        /// <param name="id">The id of the resource.</param>
        /// <param name="name">The name of the resource.</param>
        /// <param name="type">The type of the resource</param>
        /// <param name="location">The geographic location of the resource.
        /// This must be one of the supported and registered Azure Geo Regions
        /// (for example, West US, East US, Southeast Asia, and so
        /// forth).</param>
        /// <param name="tags">Tags to help categorize the resource in the
        /// Azure portal.</param>
        /// <param name="apiEndpoints">Read-only property that lists the Media
        /// Services REST API endpoints for this resource. If supplied on a PUT
        /// or PATCH, the value will be ignored.</param>
        /// <param name="storageAccounts">The storage accounts for this
        /// resource.</param>
        public MediaService(string id = default(string), string name = default(string), string type = default(string), string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), IList<ApiEndpoint> apiEndpoints = default(IList<ApiEndpoint>), IList<StorageAccount> storageAccounts = default(IList<StorageAccount>))
            : base(id, name, type, location, tags)
        {
            ApiEndpoints = apiEndpoints;
            StorageAccounts = storageAccounts;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets read-only property that lists the Media Services REST API
        /// endpoints for this resource. If supplied on a PUT or PATCH, the
        /// value will be ignored.
        /// </summary>
        [JsonProperty(PropertyName = "properties.apiEndpoints")]
        public IList<ApiEndpoint> ApiEndpoints { get; private set; }

        /// <summary>
        /// Gets or sets the storage accounts for this resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.storageAccounts")]
        public IList<StorageAccount> StorageAccounts { get; set; }

    }
}
